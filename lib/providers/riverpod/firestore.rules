rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ==================== HELPER FUNCTIONS ====================
    // Fungsi-fungsi ini membantu membuat aturan lebih mudah dibaca dan digunakan kembali.

    // Memeriksa apakah pengguna sudah login
    function isSignedIn() {
      return request.auth != null;
    }

    // Mendapatkan data profil pengguna yang melakukan request
    function getRequestingUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // Memeriksa role dari pengguna yang melakukan request
    function isRole(role) {
      return isSignedIn() && getRequestingUserData().role == role;
    }

    // Memeriksa apakah pengguna adalah Admin
    function isAdmin() {
      return isRole('admin');
    }

    // Memeriksa apakah pengguna adalah Employee
    function isEmployee() {
      return isRole('employee');
    }

    // Memeriksa apakah pengguna adalah Cleaner
    function isCleaner() {
      return isRole('cleaner');
    }

    // Memeriksa apakah pengguna adalah pemilik dokumen (misal: profilnya sendiri)
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // ==================== USERS COLLECTION RULES ====================
    // Aturan untuk koleksi 'users' yang berisi profil pengguna.

    match /users/{userId} {
      // Siapa pun yang sudah login dapat membaca profil pengguna lain (untuk menampilkan nama, dll.)
      allow read: if isSignedIn();

      // Pengguna hanya dapat membuat profilnya sendiri saat registrasi.
      allow create: if isOwner(userId);

      // Pengguna hanya dapat memperbarui profilnya sendiri.
      allow update: if isOwner(userId);

      // Tidak ada yang diizinkan menghapus profil pengguna untuk menjaga integritas data.
      allow delete: if false;
    }

    // ==================== REPORTS COLLECTION RULES ====================
    // Aturan untuk koleksi 'reports' yang berisi laporan kebersihan.

    match /reports/{reportId} {

      // --- READ ---
      // Aturan untuk siapa yang boleh membaca laporan.
      allow read: if
        // 1. Admin dapat membaca semua laporan di departemennya.
        (isAdmin() && getRequestingUserData().departmentId == resource.data.departmentId) ||
        // 2. Employee dapat membaca laporan yang dia buat.
        (isEmployee() && request.auth.uid == resource.data.userId) ||
        // 3. Cleaner dapat membaca laporan yang ditugaskan kepadanya.
        (isCleaner() && request.auth.uid == resource.data.cleanerId);

      // --- CREATE ---
      // Aturan untuk siapa yang boleh membuat laporan baru.
      allow create: if
        // 1. Hanya Employee atau Cleaner yang boleh membuat laporan.
        (isEmployee() || isCleaner()) &&
        // 2. Data yang dikirim harus valid: userId harus sesuai dengan pembuat.
        request.resource.data.userId == request.auth.uid &&
        // 3. Status awal harus 'pending'.
        request.resource.data.status == 'pending';

      // --- UPDATE ---
      // Aturan untuk siapa yang boleh memperbarui laporan.
      allow update: if
        // A. AKSI ADMIN
        (
          isAdmin() &&
          getRequestingUserData().departmentId == resource.data.departmentId &&
          (
            // A1. Admin boleh menugaskan laporan (mengubah status, cleanerId, cleanerName).
            (
              resource.data.status == 'pending' &&
              request.resource.data.status == 'assigned'
            ) ||
            // A2. Admin boleh memverifikasi/menolak laporan (mengubah status, notes, dll).
            (
              resource.data.status == 'completed' &&
              (request.resource.data.status == 'verified' || request.resource.data.status == 'rejected')
            )
          )
        ) ||
        // B. AKSI CLEANER
        (
          isCleaner() &&
          request.auth.uid == resource.data.cleanerId &&
          (
            // B1. Cleaner boleh memulai pekerjaan (mengubah status ke 'in_progress').
            (
              resource.data.status == 'assigned' &&
              request.resource.data.status == 'in_progress'
            ) ||
            // B2. Cleaner boleh menyelesaikan pekerjaan (mengubah status ke 'completed' dan menambah foto).
            (
              resource.data.status == 'in_progress' &&
              request.resource.data.status == 'completed'
            )
          )
        );

      // --- DELETE ---
      // Tidak ada yang boleh menghapus laporan secara langsung untuk menjaga integritas data.
      // Bisa diubah menjadi `if isAdmin();` jika admin diizinkan menghapus.
      allow delete: if false;
    }
  }
}